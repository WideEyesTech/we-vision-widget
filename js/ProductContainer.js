// Generated by CoffeeScript 1.9.1
var _onMouseEnter, _onMouseLeave,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

define(function(require) {
  var $, Backbone, ProductContainer, _;
  Backbone = require('backbone');
  _ = require('underscore');
  $ = require('jquery');
  return ProductContainer = (function(superClass) {
    var self;

    extend(ProductContainer, superClass);

    function ProductContainer() {
      return ProductContainer.__super__.constructor.apply(this, arguments);
    }

    self = ProductContainer;

    ProductContainer.prototype.template = require('templates/product_container');

    ProductContainer.prototype.initialize = function(options) {
      this.config = options.widget_configuration;
      return this.product_id = options.product_id;
    };

    ProductContainer.prototype.render = function() {
      if (this.template) {
        this.setElement(this.template(this._getTemplateData()));
        this.$el.addClass('');
        if (this.config.tile.display) {
          this.$el.mouseenter(_onMouseEnter);
          this.$el.mouseleave(_onMouseLeave);
        }
      }
      return this;
    };

    ProductContainer.prototype._getTemplateData = function() {
      return this.model;
    };

    return ProductContainer;

  })(Backbone.View);
});

_onMouseEnter = function(ev) {
  return ev.currentTarget.className += " hover";
};

_onMouseLeave = function(ev) {
  return ev.currentTarget.className = ev.currentTarget.className.replace(" hover", "");
};
