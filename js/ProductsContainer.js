// Generated by CoffeeScript 1.9.1
var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

define(function(require) {
  var $, Backbone, ProductContainer, ProductsContainer, _;
  Backbone = require('backbone');
  $ = require('jquery');
  _ = require('underscore');
  ProductContainer = require('ProductContainer');
  return ProductsContainer = (function(superClass) {
    extend(ProductsContainer, superClass);

    function ProductsContainer() {
      return ProductsContainer.__super__.constructor.apply(this, arguments);
    }

    ProductsContainer.prototype.template = require('templates/products_container');

    ProductsContainer.prototype.events = {
      'click': '_onClick'
    };

    ProductsContainer.prototype.initialize = function(options) {
      this.widget_configuration = options.widget_configuration;
      this.product_id = options.product_id;
      return this;
    };

    ProductsContainer.prototype.render = function() {
      var i, index, len, prc, product, ref;
      if (this.template) {
        this.setElement(this.template(this._getTemplateData()));
        this.$el.addClass('');
      }
      ref = this.model;
      for (index = i = 0, len = ref.length; i < len; index = ++i) {
        product = ref[index];
        prc = new ProductContainer({
          model: product,
          product_id: this.product_id,
          widget_configuration: this.widget_configuration
        });
        this.$el.append(prc.render().el);
      }
      ProductsContainer.__super__.render.apply(this, arguments);
      return this;
    };

    ProductsContainer.prototype._onClick = function() {
      return true;
    };

    ProductsContainer.prototype._getTemplateData = function() {
      return {
        products: this.model
      };
    };

    return ProductsContainer;

  })(Backbone.View);
});
